--- smali_classes4/com/samsung/android/sdk/healthdata/privileged/IKnoxControl$Stub$Proxy.smali
+++ smali_classes4/com/samsung/android/sdk/healthdata/privileged/IKnoxControl$Stub$Proxy.smali
@@ -109,72 +109,11 @@
 .end method
 
 .method public isKnoxAvailable()Z
-    .locals 5
-    .annotation system Ldalvik/annotation/Throws;
-        value = {
-            Landroid/os/RemoteException;
-        }
-    .end annotation
-
-    .line 1
-    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
-
-    move-result-object v0
-
-    .line 2
-    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
-
-    move-result-object v1
-
-    :try_start_0
-    const-string v2, "com.samsung.android.sdk.healthdata.privileged.IKnoxControl"
-
-    .line 3
-    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
-
-    .line 4
-    iget-object v2, p0, Lcom/samsung/android/sdk/healthdata/privileged/IKnoxControl$Stub$Proxy;->mRemote:Landroid/os/IBinder;
-
-    const/4 v3, 0x0
-
-    const/4 v4, 0x1
-
-    invoke-interface {v2, v4, v0, v1, v3}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
-
-    .line 5
-    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
-
-    .line 6
-    invoke-virtual {v1}, Landroid/os/Parcel;->readInt()I
-
-    move-result v2
-    :try_end_0
-    .catchall {:try_start_0 .. :try_end_0} :catchall_0
-
-    if-eqz v2, :cond_0
-
-    move v3, v4
-
-    .line 7
-    :cond_0
-    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
-
-    .line 8
-    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
-
-    return v3
-
-    :catchall_0
-    move-exception v2
-
-    .line 9
-    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+    .locals 1
 
-    .line 10
-    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+    const/4 v0, 0x0
 
-    .line 11
-    throw v2
+    return v0
 .end method
 
 .method public requestKeyInitForKnox(Lcom/samsung/android/sdk/healthdata/privileged/IResultObserver;Z)Z
--- smali_classes4/com/samsung/android/sdk/healthdata/privileged/KnoxControl.smali
+++ smali_classes4/com/samsung/android/sdk/healthdata/privileged/KnoxControl.smali
@@ -223,25 +223,9 @@
 .end method
 
 .method public isKnoxAvailable()Z
-    .locals 2
-
-    iget-object v0, p0, Lcom/samsung/android/sdk/healthdata/privileged/KnoxControl;->mKnoxControl:Lcom/samsung/android/sdk/healthdata/privileged/IKnoxControl;
-
-    invoke-static {v0}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
-
-    new-instance v1, Lcom/samsung/android/sdk/healthdata/privileged/a0;
-
-    invoke-direct {v1, v0}, Lcom/samsung/android/sdk/healthdata/privileged/a0;-><init>(Lcom/samsung/android/sdk/healthdata/privileged/IKnoxControl;)V
-
-    invoke-static {v1}, Lcom/samsung/android/sdk/healthdata/privileged/util/RemoteUtil;->callRemoteTask(Lcom/samsung/android/sdk/healthdata/privileged/util/RemoteUtil$RemoteCallable;)Ljava/lang/Object;
-
-    move-result-object v0
-
-    check-cast v0, Ljava/lang/Boolean;
-
-    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z
+    .locals 1
 
-    move-result v0
+    const/4 v0, 0x0
 
     return v0
 .end method
--- smali_classes5/com/samsung/android/service/health/security/IcccAdapter.smali
+++ smali_classes5/com/samsung/android/service/health/security/IcccAdapter.smali
@@ -23,81 +23,11 @@
 .end method
 
 .method static checkKnoxCompromised(Landroid/content/Context;Z)I
-    .locals 3
-
-    if-eqz p1, :cond_0
-
-    const-string p1, "_ER"
-
-    goto :goto_0
-
-    :cond_0
-    const-string p1, ""
-
-    .line 1
-    :goto_0
-    invoke-static {p0}, Lcom/samsung/android/service/health/security/IcccAdapter;->getIntegrityChecker(Landroid/content/Context;)Lcom/samsung/android/service/health/security/IntegrityChecker;
-
-    move-result-object p0
-
-    .line 2
-    new-instance v0, Ljava/io/File;
-
-    invoke-static {}, Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
-
-    move-result-object v1
-
-    const-string v2, "SHealth_Rooted"
-
-    invoke-direct {v0, v1, v2}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V
-
-    .line 3
-    invoke-virtual {v0}, Ljava/io/File;->exists()Z
-
-    move-result v0
-
-    if-eqz v0, :cond_1
-
-    .line 4
-    sget-object v0, Lcom/samsung/android/service/health/security/IcccAdapter;->TAG:Ljava/lang/String;
-
-    const-string v1, "checkKnoxCompromised SHealth_Rooted"
-
-    invoke-static {v0, v1}, Lcom/samsung/android/sdk/healthdata/privileged/util/LogUtil;->LOGD(Ljava/lang/String;Ljava/lang/String;)V
-
-    .line 5
-    invoke-interface {p0, p1}, Lcom/samsung/android/service/health/security/IntegrityChecker;->doLoggingForTest(Ljava/lang/String;)V
-
-    const/16 p0, 0x8
-
-    return p0
-
-    .line 6
-    :cond_1
-    :try_start_0
-    invoke-interface {p0, p1}, Lcom/samsung/android/service/health/security/IntegrityChecker;->checkCompromisedWithLogging(Ljava/lang/String;)I
-
-    move-result p0
-    :try_end_0
-    .catchall {:try_start_0 .. :try_end_0} :catchall_0
-
-    goto :goto_1
-
-    :catchall_0
-    move-exception v0
-
-    .line 7
-    invoke-interface {p0, v0}, Lcom/samsung/android/service/health/security/IntegrityChecker;->getExceptionCode(Ljava/lang/Throwable;)I
-
-    move-result v1
-
-    .line 8
-    invoke-interface {p0, v0, p1}, Lcom/samsung/android/service/health/security/IntegrityChecker;->doLoggingForException(Ljava/lang/Throwable;Ljava/lang/String;)V
+    .locals 1
 
-    move p0, v1
+    const/4 v0, 0x0
 
-    :goto_1
-    return p0
+    return v0
 .end method
 
 .method static fillNewCommonErrorCode(Landroid/content/Context;Ljava/lang/StringBuilder;)V
@@ -462,27 +392,6 @@
 
     invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
 
-    .line 2
-    invoke-static {p0}, Lcom/samsung/android/service/health/security/IcccAdapter;->getIntegrityChecker(Landroid/content/Context;)Lcom/samsung/android/service/health/security/IntegrityChecker;
-
-    move-result-object v1
-
-    invoke-interface {v1}, Lcom/samsung/android/service/health/security/IntegrityChecker;->getCategoryCode()Ljava/lang/String;
-
-    move-result-object v1
-
-    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
-
-    .line 3
-    invoke-static {p1}, Lcom/samsung/android/service/health/security/IcccAdapter;->getValueWithHex(I)Ljava/lang/String;
-
-    move-result-object p1
-
-    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
-
-    .line 4
-    invoke-static {p0, v0}, Lcom/samsung/android/service/health/security/IcccAdapter;->fillNewCommonErrorCode(Landroid/content/Context;Ljava/lang/StringBuilder;)V
-
     .line 5
     invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
--- smali_classes5/com/samsung/android/service/health/security/KnoxAdapter.smali
+++ smali_classes5/com/samsung/android/service/health/security/KnoxAdapter.smali
@@ -40,26 +40,9 @@
 .method public static checkKnoxCompromisedExternal(Landroid/content/Context;)Ljava/lang/String;
     .locals 1
 
-    const/4 v0, 0x1
-
-    .line 1
-    invoke-static {p0, v0}, Lcom/samsung/android/service/health/security/IcccAdapter;->checkKnoxCompromised(Landroid/content/Context;Z)I
-
-    move-result v0
-
-    if-nez v0, :cond_0
-
     const/4 p0, 0x0
 
     return-object p0
-
-    .line 2
-    :cond_0
-    invoke-static {p0, v0}, Lcom/samsung/android/service/health/security/IcccAdapter;->getKnoxCompromisedErrorCode(Landroid/content/Context;I)Ljava/lang/String;
-
-    move-result-object p0
-
-    return-object p0
 .end method
 
 .method public static checkKnoxCompromisedInternal(Landroid/content/Context;)I
@@ -67,11 +50,7 @@
 
     const/4 v0, 0x0
 
-    invoke-static {p0, v0}, Lcom/samsung/android/service/health/security/IcccAdapter;->checkKnoxCompromised(Landroid/content/Context;Z)I
-
-    move-result p0
-
-    return p0
+    return v0
 .end method
 
 .method public static checkKnoxInitMigCondition(Landroid/content/Context;)I
@@ -348,87 +327,17 @@
 .method public static isKnoxAvailable(Landroid/content/Context;)Z
     .locals 1
 
-    invoke-static {}, Lcom/samsung/android/service/health/security/KnoxAdapter;->isAksSakMandatory()Z
-
-    move-result v0
-
-    if-nez v0, :cond_1
-
-    invoke-static {p0}, Lcom/samsung/android/service/health/security/KnoxAdapter;->isKnoxAvailableCore(Landroid/content/Context;)Z
-
-    move-result p0
-
-    if-eqz p0, :cond_0
-
-    goto :goto_0
-
-    :cond_0
-    const/4 p0, 0x0
-
-    goto :goto_1
-
-    :cond_1
-    :goto_0
-    const/4 p0, 0x1
+    const/4 v0, 0x0
 
-    :goto_1
-    return p0
+    return v0
 .end method
 
 .method static isKnoxAvailableCore(Landroid/content/Context;)Z
     .locals 1
 
-    .line 1
-    sget-object v0, Lcom/samsung/android/service/health/security/KnoxAdapter;->sIsKnoxAvailable:Ljava/lang/Boolean;
-
-    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z
-
-    move-result v0
-
-    if-nez v0, :cond_1
-
-    .line 2
-    invoke-static {}, Lcom/samsung/android/service/health/security/KnoxAdapter;->isSupportedKnoxVersion()Z
-
-    move-result v0
-
-    if-eqz v0, :cond_0
-
-    invoke-static {}, Lcom/samsung/android/service/health/security/KnoxAdapter;->isSupportedTimaVersion()Z
-
-    move-result v0
-
-    if-eqz v0, :cond_0
-
-    invoke-static {p0}, Lcom/samsung/android/service/health/security/KnoxAdapter;->shouldUseKnox(Landroid/content/Context;)Z
-
-    move-result p0
-
-    if-eqz p0, :cond_0
-
-    const/4 p0, 0x1
-
-    goto :goto_0
-
-    :cond_0
-    const/4 p0, 0x0
-
-    :goto_0
-    invoke-static {p0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;
-
-    move-result-object p0
-
-    sput-object p0, Lcom/samsung/android/service/health/security/KnoxAdapter;->sIsKnoxAvailable:Ljava/lang/Boolean;
-
-    .line 3
-    :cond_1
-    sget-object p0, Lcom/samsung/android/service/health/security/KnoxAdapter;->sIsKnoxAvailable:Ljava/lang/Boolean;
-
-    invoke-virtual {p0}, Ljava/lang/Boolean;->booleanValue()Z
-
-    move-result p0
+    const/4 v0, 0x0
 
-    return p0
+    return v0
 .end method
 
 .method public static isLicenseActivated(Landroid/content/Context;)Z
@@ -529,99 +438,17 @@
 .end method
 
 .method static isSupportedTimaVersion()Z
-    .locals 4
-
-    const-string v0, "ro.config.tima"
-
-    const-string v1, "0"
-
-    .line 1
-    invoke-static {v0, v1}, Lcom/samsung/android/app/shealth/runtime/contract/helper/SystemPropertyHelper;->getSystemProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-
-    move-result-object v0
-
-    .line 2
-    invoke-static {v1}, Lcom/samsung/android/service/health/security/KnoxAdapter;->getTimaVersion(Ljava/lang/String;)Ljava/lang/String;
-
-    move-result-object v1
-
-    const/4 v2, 0x0
-
-    :try_start_0
-    const-string v3, "\\."
-
-    .line 3
-    invoke-virtual {v1, v3}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;
-
-    move-result-object v1
-
-    aget-object v1, v1, v2
-
-    .line 4
-    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
-
-    move-result v1
-    :try_end_0
-    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
-
-    const-string v3, "1"
-
-    .line 5
-    invoke-virtual {v3, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
-
-    move-result v0
-
-    if-eqz v0, :cond_0
-
-    const/4 v0, 0x3
-
-    if-lt v1, v0, :cond_0
+    .locals 1
 
-    const/4 v2, 0x1
+    const/4 v0, 0x0
 
-    :catch_0
-    :cond_0
-    return v2
+    return v0
 .end method
 
 .method private static shouldUseKnox(Landroid/content/Context;)Z
-    .locals 4
+    .locals 1
 
     const/4 v0, 0x0
 
-    .line 1
-    :try_start_0
-    invoke-static {p0}, Lcom/samsung/android/service/health/security/KeyRetrievalMode;->get(Landroid/content/Context;)Lcom/samsung/android/service/health/security/KeyRetrievalMode;
-
-    move-result-object v1
-    :try_end_0
-    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0
-
-    .line 2
-    invoke-static {v1}, Lcom/samsung/android/service/health/security/KnoxAdapter;->isKnoxAlreadySetup(Lcom/samsung/android/service/health/security/KeyRetrievalMode;)Z
-
-    move-result v2
-
-    const/4 v3, 0x1
-
-    if-eqz v2, :cond_0
-
-    return v3
-
-    :cond_0
-    if-eqz v1, :cond_1
-
-    .line 3
-    invoke-static {p0}, Lcom/samsung/android/service/health/security/KnoxAdapter;->isDbMigrationNeeded(Landroid/content/Context;)Z
-
-    move-result p0
-
-    if-eqz p0, :cond_2
-
-    :cond_1
-    move v0, v3
-
-    :catch_0
-    :cond_2
     return v0
 .end method
--- smali_classes5/k50/h.smali
+++ smali_classes5/k50/h.smali
@@ -169,34 +169,11 @@
     return v3
 .end method
 
+# isRooted
 .method public static final b(Ljava/io/File;)Z
     .locals 1
 
-    const-string v0, "<this>"
+    const/4 v0, 0x0
 
-    invoke-static {p0, v0}, Lo50/k;->i(Ljava/lang/Object;Ljava/lang/String;)V
-
-    invoke-virtual {p0}, Ljava/io/File;->getPath()Ljava/lang/String;
-
-    move-result-object p0
-
-    const-string v0, "path"
-
-    invoke-static {p0, v0}, Lo50/k;->h(Ljava/lang/Object;Ljava/lang/String;)V
-
-    invoke-static {p0}, Lk50/h;->a(Ljava/lang/String;)I
-
-    move-result p0
-
-    if-lez p0, :cond_0
-
-    const/4 p0, 0x1
-
-    goto :goto_0
-
-    :cond_0
-    const/4 p0, 0x0
-
-    :goto_0
-    return p0
+    return v0
 .end method
--- smali_classes2/ed/j.smali
+++ smali_classes2/ed/j.smali
@@ -665,85 +665,16 @@
     return-void
 .end method
 
+# showKnoxExceptionPopup
 .method public final p(Landroid/app/Activity;)V
-    .locals 3
-
-    const-string v0, "context"
-
-    invoke-static {p1, v0}, Lo50/k;->i(Ljava/lang/Object;Ljava/lang/String;)V
-
-    .line 1
-    new-instance v0, Landroid/content/Intent;
-
-    const-class v1, Lcom/samsung/android/app/shealth/home/oobe2/view/HomeAppCloseActivity;
-
-    invoke-direct {v0, p1, v1}, Landroid/content/Intent;-><init>(Landroid/content/Context;Ljava/lang/Class;)V
-
-    .line 2
-    sget-object v1, Lcom/samsung/android/app/shealth/app/state/AppErrorCode$ErrorCode;->DP_DISCONNECTED_EXCEPTION:Lcom/samsung/android/app/shealth/app/state/AppErrorCode$ErrorCode;
-
-    const-string v2, "extra_error_code"
-
-    invoke-virtual {v0, v2, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/io/Serializable;)Landroid/content/Intent;
-
-    .line 3
-    invoke-virtual {p1, v0}, Landroid/app/Activity;->startActivity(Landroid/content/Intent;)V
-
-    .line 4
-    invoke-direct {p0, p1}, Led/j;->e(Landroid/app/Activity;)V
+    .locals 0
 
     return-void
 .end method
 
+# showKnoxIntegrityErrorPopup
 .method public final q(Landroid/app/Activity;Lcom/samsung/android/app/shealth/home/oobe2/viewmodel/KnoxHandlerViewModel$KnoxInitResult;)V
-    .locals 3
-
-    const-string v0, "context"
-
-    invoke-static {p1, v0}, Lo50/k;->i(Ljava/lang/Object;Ljava/lang/String;)V
-
-    const-string v0, "it"
-
-    invoke-static {p2, v0}, Lo50/k;->i(Ljava/lang/Object;Ljava/lang/String;)V
-
-    .line 1
-    new-instance v0, Landroid/content/Intent;
-
-    const-class v1, Lcom/samsung/android/app/shealth/home/oobe2/view/HomeAppCloseActivity;
-
-    invoke-direct {v0, p1, v1}, Landroid/content/Intent;-><init>(Landroid/content/Context;Ljava/lang/Class;)V
-
-    const/high16 v1, 0x4000000
-
-    .line 2
-    invoke-virtual {v0, v1}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;
-
-    const/high16 v1, 0x10000
-
-    .line 3
-    invoke-virtual {v0, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;
-
-    .line 4
-    sget-object v1, Lcom/samsung/android/app/shealth/app/state/AppErrorCode$ErrorCode;->OOBE_ERROR_KNOX_ROOTING_DEVICE:Lcom/samsung/android/app/shealth/app/state/AppErrorCode$ErrorCode;
-
-    const-string v2, "extra_error_code"
-
-    invoke-virtual {v0, v2, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/io/Serializable;)Landroid/content/Intent;
-
-    .line 5
-    invoke-virtual {p0, p2}, Led/j;->f(Lcom/samsung/android/app/shealth/home/oobe2/viewmodel/KnoxHandlerViewModel$KnoxInitResult;)Ljava/lang/String;
-
-    move-result-object p2
-
-    const-string v1, "extra_error_code_msg"
-
-    invoke-virtual {v0, v1, p2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
-
-    .line 6
-    invoke-virtual {p1, v0}, Landroid/app/Activity;->startActivity(Landroid/content/Intent;)V
-
-    .line 7
-    invoke-direct {p0, p1}, Led/j;->e(Landroid/app/Activity;)V
+    .locals 0
 
     return-void
 .end method
--- smali_classes2/com/samsung/android/app/shealth/home/oobe2/view/HomeAppCloseActivity.smali
+++ smali_classes2/com/samsung/android/app/shealth/home/oobe2/view/HomeAppCloseActivity.smali
@@ -1681,40 +1681,13 @@
     return-void
 .end method
 
+# isDeviceRooted
 .method private final Z3()Z
     .locals 2
 
-    iget-object v0, p0, Lcom/samsung/android/app/shealth/home/oobe2/view/HomeAppCloseActivity;->k:Lhd/c;
-
-    if-nez v0, :cond_0
-
-    const-string v0, "mViewModel"
-
-    invoke-static {v0}, Lo50/k;->A(Ljava/lang/String;)V
-
     const/4 v0, 0x0
 
-    :cond_0
-    invoke-virtual {v0}, Lhd/c;->o()Ljava/lang/String;
-
-    move-result-object v0
-
-    const/4 v1, 0x0
-
-    if-eqz v0, :cond_1
-
-    invoke-static {v0}, Lcom/samsung/android/sdk/healthdata/privileged/KnoxControl;->checkWarrantyBit(Ljava/lang/String;)I
-
-    move-result v0
-
-    if-gtz v0, :cond_1
-
-    const/4 v0, 0x1
-
-    move v1, v0
-
-    :cond_1
-    return v1
+    return v0
 .end method
 
 .method private final a4(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
--- smali_classes2/com/samsung/android/app/shealth/home/oobe2/viewmodel/KnoxHandlerViewModel.smali
+++ smali_classes2/com/samsung/android/app/shealth/home/oobe2/viewmodel/KnoxHandlerViewModel.smali
@@ -384,10 +384,12 @@
     return-object v0
 .end method
 
+# getMIsKnoxAvailable
 .method public final r()Z
     .locals 1
 
-    iget-boolean v0, p0, Lcom/samsung/android/app/shealth/home/oobe2/viewmodel/KnoxHandlerViewModel;->n:Z
+    .line 1
+    const/4 v0, 0x0
 
     return v0
 .end method
@@ -456,10 +458,9 @@
     return-object v0
 .end method
 
+# setMIsKnoxAvailable
 .method public final z(Z)V
     .locals 0
 
-    iput-boolean p1, p0, Lcom/samsung/android/app/shealth/home/oobe2/viewmodel/KnoxHandlerViewModel;->n:Z
-
     return-void
 .end method
-- 
2.34.1

